%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9 (Build 13A603) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 676 137
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 676 137
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9496 1.0000 1.0890 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4194 0.2144 0.0081 0.3502 0.7244 0.0935 0.1799 0.0612 0.9873 ] def 
/RangeLMN [ 0.0 0.9496 0.0 1.0000 0.0 1.0890 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.25589368 0.64242852 0.64137715 sc
q
126.905 0.42699999 m
103.775 0.42699999 l
101.261 0.42699999 99.216003 2.457 99.216003 4.9720001 c
99.216003 20.216 l
99.216003 21.419001 99.702003 22.58 100.554 23.438 c
119.41 42.276001 l
119.41 57.922001 l
119.41 60.437 121.448 62.476002 123.965 62.476002 c
126.487 62.476002 128.526 60.437 128.526 57.922001 c
128.526 40.401001 l
128.526 39.183998 128.041 38.027 127.188 37.18 c
108.325 18.326 l
108.325 9.5249996 l
126.905 9.5249996 l
133.396 9.5249996 138.668 14.798 138.668 21.271 c
138.668 116.062 l
138.668 122.536 133.396 127.816 126.905 127.816 c
21.205999 127.816 l
14.725 127.816 9.46 122.536 9.46 116.062 c
9.46 21.271 l
9.46 14.798 14.725 9.5249996 21.205999 9.5249996 c
39.883999 9.5249996 l
39.883999 18.385 l
25.528999 32.731998 l
23.740999 34.508999 23.740999 37.396999 25.528999 39.179001 c
27.305 40.952999 30.186001 40.952999 31.962999 39.179001 c
47.659 23.493999 l
48.512001 22.639 48.993 21.486 48.993 20.277 c
48.993 4.9720001 l
48.993 2.457 46.952999 0.42699999 44.438 0.42699999 c
21.205999 0.42699999 l
9.7080002 0.42699999 0.35499999 9.7790003 0.35499999 21.271 c
0.35499999 116.062 l
0.35499999 127.568 9.7080002 136.925 21.205999 136.925 c
126.905 136.925 l
138.416 136.925 147.782 127.568 147.782 116.062 c
147.782 21.271 l
147.782 9.7790003 138.416 0.42699999 126.905 0.42699999 c
W*
0 0 676 137 rc
-4.645 141.925 m
152.782 141.925 l
152.782 -4.573 l
-4.645 -4.573 l
h
-4.645 141.925 m
f*
Q
0.4626171 0.64541876 0.27998158 sc
q
88.335999 0.38699999 m
85.817001 0.38699999 83.781998 2.4159999 83.781998 4.941 c
83.781998 24.827999 l
83.781998 26.040001 84.261002 27.191999 85.112999 28.049999 c
101.479 44.419998 l
101.479 70.403 l
101.479 72.918999 103.518 74.948997 106.032 74.948997 c
108.553 74.948997 110.592 72.918999 110.592 70.403 c
110.592 42.534 l
110.592 41.330002 110.106 40.162998 109.253 39.307999 c
92.890999 22.945999 l
92.890999 4.941 l
92.890999 2.4159999 90.850998 0.38699999 88.335999 0.38699999 c
W*
0 0 676 137 rc
78.781998 79.948997 m
115.592 79.948997 l
115.592 -4.6129999 l
78.781998 -4.6129999 l
h
78.781998 79.948997 m
f*
Q
q
74.271004 2.7409999 m
71.754997 2.7409999 69.716003 4.7750001 69.716003 7.2950001 c
69.716003 58.133999 l
69.716003 59.342999 70.200996 60.499001 71.054001 61.355 c
87.417 77.725998 l
87.417 108.553 l
87.417 111.074 89.450996 113.108 91.972 113.108 c
94.490997 113.108 96.525002 111.074 96.525002 108.553 c
96.525002 75.842003 l
96.525002 74.633003 96.050003 73.476997 95.190002 72.617996 c
78.824997 56.244999 l
78.824997 7.2950001 l
78.824997 4.7750001 76.783997 2.7409999 74.271004 2.7409999 c
W*
0 0 676 137 rc
64.716003 118.108 m
101.525 118.108 l
101.525 -2.2590001 l
64.716003 -2.2590001 l
h
64.716003 118.108 m
f*
Q
q
58.965 0.551 m
56.445 0.551 54.415001 2.592 54.415001 5.1059999 c
54.415001 27.667999 l
38.035 44.025002 l
37.179001 44.889 36.703999 46.041 36.703999 47.25 c
36.703999 63.588001 l
36.703999 66.102997 38.737999 68.130997 41.250999 68.130997 c
43.771 68.130997 45.812 66.102997 45.812 63.588001 c
45.812 49.146 l
62.181999 32.773998 l
63.037998 31.917 63.519001 30.761 63.519001 29.554001 c
63.519001 5.1059999 l
63.519001 2.592 61.479 0.551 58.965 0.551 c
W*
0 0 676 137 rc
31.704 73.130997 m
68.518997 73.130997 l
68.518997 -4.4489999 l
31.704 -4.4489999 l
h
31.704 73.130997 m
f*
Q
q
74.271004 0.42699999 m
71.754997 0.42699999 69.716003 2.457 69.716003 4.9720001 c
69.716003 35.316002 l
53.341 51.694 l
52.488998 52.542999 52.013 53.699001 52.013 54.917 c
52.013 93.588997 l
52.013 96.108002 54.042999 98.138 56.557999 98.138 c
59.073002 98.138 61.118 96.108002 61.118 93.588997 c
61.118 56.792 l
77.491997 40.421001 l
78.343002 39.564999 78.824997 38.418999 78.824997 37.199001 c
78.824997 4.9720001 l
78.824997 2.457 76.783997 0.42699999 74.271004 0.42699999 c
W*
0 0 676 137 rc
47.013 103.138 m
83.824997 103.138 l
83.824997 -4.573 l
47.013 -4.573 l
h
47.013 103.138 m
f*
Q
0.25589368 0.64242852 0.64137715 sc
q
174.839 20.356001 m
174.839 32.974998 l
219.48199 103.795 l
176.743 103.795 l
176.743 116.956 l
236.705 116.956 l
236.705 105.017 l
191.799 33.516998 l
236.705 33.516998 l
236.705 20.356001 l
174.839 20.356001 l
W*
0 0 676 137 rc
169.839 121.956 m
241.705 121.956 l
241.705 15.356 l
169.839 15.356 l
h
169.839 121.956 m
f*
Q
q
287.13101 98.641998 m
283.73901 102.306 278.44901 104.61 272.75299 104.61 c
267.05499 104.61 261.76501 102.306 258.37201 98.641998 c
253.62601 93.484001 252.67 88.058998 252.67 68.655998 c
252.67 49.256001 253.62601 43.827 258.37201 38.675999 c
261.76501 35.012001 267.05499 32.702999 272.75299 32.702999 c
278.44901 32.702999 283.73901 35.012001 287.13101 38.675999 c
291.883 43.827 292.83401 49.256001 292.83401 68.655998 c
292.83401 88.058998 291.883 93.484001 287.13101 98.641998 c
287.13101 98.641998 291.883 93.484001 287.13101 98.641998 c
287.13101 98.641998 l
287.13101 98.641998 l
h
298.25699 29.854 m
291.61401 23.205999 283.065 19.544001 272.75299 19.544001 c
262.44101 19.544001 254.03101 23.205999 247.38 29.854 c
237.88699 39.353001 238.02 50.069 238.02 68.655998 c
238.02 87.245003 237.88699 97.960999 247.38 107.458 c
254.03101 114.105 262.44101 117.77 272.75299 117.77 c
283.065 117.77 291.61401 114.105 298.25699 107.458 c
307.758 97.960999 307.483 87.245003 307.483 68.655998 c
307.483 50.069 307.758 39.353001 298.25699 29.854 c
298.25699 29.854 l
h
298.25699 29.854 m
W*
0 0 676 137 rc
233.0199 122.77 m
312.48383 122.77 l
312.48383 14.544 l
233.0199 14.544 l
h
233.0199 122.77 m
f*
Q
q
343.92001 19.544001 m
329.401 19.544001 318.95801 22.937 309.73199 32.296001 c
319.49799 41.93 l
326.55499 34.875 334.29001 32.702999 344.18799 32.702999 c
356.811 32.702999 364.133 38.131001 364.133 47.491001 c
364.133 51.696999 362.914 55.227001 360.33499 57.532001 c
357.89301 59.841 355.45099 60.786999 349.755 61.601002 c
338.35999 63.229 l
330.48599 64.318001 324.25 67.027 320.03699 70.963997 c
315.29199 75.442001 312.987 81.544998 312.987 89.415001 c
312.987 106.238 325.19501 117.77 345.27802 117.77 c
358.03101 117.77 366.98401 114.514 375.26099 106.782 c
365.89899 97.554001 l
359.92899 103.257 353.01099 105.017 344.87 105.017 c
333.47299 105.017 327.23099 98.504997 327.23099 89.959 c
327.23099 86.429001 328.319 83.311996 330.89401 81.001999 c
333.33401 78.834999 337.271 77.208 341.746 76.527 c
352.73499 74.900002 l
361.69299 73.541 366.71399 71.373001 370.78299 67.706001 c
376.07199 63.098 378.65302 56.174999 378.65302 47.896 c
378.65302 30.122999 364.133 19.544001 343.92001 19.544001 c
W*
0 0 676 137 rc
304.73199 122.77 m
383.65302 122.77 l
383.65302 14.544 l
304.73199 14.544 l
h
304.73199 122.77 m
f*
Q
q
421.59 103.795 m
421.59 20.356001 l
406.93399 20.356001 l
406.93399 103.795 l
380.341 103.795 l
380.341 116.956 l
448.17801 116.956 l
448.17801 103.795 l
421.59 103.795 l
W*
0 0 676 137 rc
375.341 121.956 m
453.17801 121.956 l
453.17801 15.356 l
375.341 15.356 l
h
375.341 121.956 m
f*
Q
q
454.46799 20.356001 m
454.46799 116.956 l
516.20001 116.956 l
516.20001 103.795 l
469.116 103.795 l
469.116 75.573997 l
509.28201 75.573997 l
509.28201 62.551998 l
469.116 62.551998 l
469.116 33.516998 l
516.20001 33.516998 l
516.20001 20.356001 l
454.46799 20.356001 l
W*
0 0 676 137 rc
449.46799 121.956 m
521.20001 121.956 l
521.20001 15.356 l
449.46799 15.356 l
h
449.46799 121.956 m
f*
Q
q
558.97601 103.795 m
537.26501 103.795 l
537.26501 73.541 l
558.97601 73.541 l
568.742 73.541 575.39502 79.105003 575.39502 88.600998 c
575.39502 98.098999 568.742 103.795 558.97601 103.795 c
558.97601 103.795 l
558.97601 103.795 l
558.97601 103.795 l
h
575.935 20.356001 m
555.58698 61.061001 l
537.26501 61.061001 l
537.26501 20.356001 l
522.61401 20.356001 l
522.61401 116.956 l
560.06299 116.956 l
578.37598 116.956 590.04498 105.154 590.04498 88.737999 c
590.04498 74.900002 581.63098 66.077003 570.776 63.098 c
593.02502 20.356001 l
575.935 20.356001 l
575.935 20.356001 l
h
575.935 20.356001 m
W*
0 0 676 137 rc
517.61401 121.956 m
598.02502 121.956 l
598.02502 15.356 l
517.61401 15.356 l
h
517.61401 121.956 m
f*
Q
q
634.67603 95.112 m
619.60797 52.240002 l
649.32599 52.240002 l
634.67603 95.112 l
634.67603 95.112 l
634.67603 95.112 l
634.67603 95.112 l
h
660.04901 20.356001 m
653.396 39.758999 l
615.276 39.758999 l
608.62201 20.356001 l
593.02502 20.356001 l
628.43103 116.956 l
640.22998 116.956 l
675.646 20.356001 l
660.04901 20.356001 l
660.04901 20.356001 l
h
660.04901 20.356001 m
W*
0 0 676 137 rc
588.02502 121.956 m
680.646 121.956 l
680.646 15.356 l
588.02502 15.356 l
h
588.02502 121.956 m
f*
ep
end
